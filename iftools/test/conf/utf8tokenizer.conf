# ==========================================================================
# ITSP - Ionflux Time Series Processing
# Copyright (c) 2005 Joern P. Meier
# itsp@ionflux.org
# --------------------------------------------------------------------------
# utf8tokenizer.conf      Configuration file for the UTF-8 tokenizer test.
# ==========================================================================
# 
# This file is part of ITSP.
# 
# ITSP is free software; you can redistribute it and/or modify it under the 
# terms of the GNU General Public License as published by the Free Software 
# Foundation; either version 2 of the License, or (at  your option) any 
# later version.
# 
# ITSP is distributed in the hope that it will be useful, but WITHOUT ANY 
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more 
# details.
# 
# You should have received a copy of the GNU General Public License
# along with ITSP; if not, write to the Free Software Foundation, Inc., 59 
# Temple Place, Suite 330, Boston, MA 02111-1307 USA
# 
# ==========================================================================

# Default token types.
defaultTokenTypes = {
	tokenType[] = {
		name = LINEAR_WHITESPACE
		typeID = 4
		validChars = ' \t'
		maxChars = 0
	}
	tokenType[] = {
		name = LINETERM
		typeID = 5
		validChars = '\r\n'
		maxChars = 1
	}
	tokenType[] = {
		name = IDENTIFIER
		typeID = 6
		validChars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_'
		maxChars = 0
	}
}

# Tokenizer tests.
test[] = {
	useDefaultTokenTypes = true
	input = {
		'abc 162_fgh lzN'
	}
}
test[] = {
	useDefaultTokenTypes = true
	tokenType[] = {
		name = DE_UMLAUT
		typeID = 101
		validChars = '\u00e4\u00fc\u00f6\u00df\u00c4\u00d6\u00dc'
		maxChars = 0
	}
	input = {
		'def ähi gßuf'
	}
}
test[] = {
	useDefaultTokenTypes = false
	addDefaultTokenType = true
	extractQuoted = true
	extractEscaped = true
	tokenType[] = {
		name = LINEAR_WHITESPACE
		typeID = 4
		validChars = ' \t'
		maxChars = 0
	}
	tokenType[] = {
		name = LINETERM
		typeID = 5
		validChars = '\r\n'
		maxChars = 1
	}
	tokenType[] = {
		name = DE_WORD
		typeID = 102
		validChars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\u00e4\u00fc\u00f6\u00df\u00c4\u00d6\u00dc-'
		maxChars = 0
	}
	input = {
		'def ähi gßuf'
		'Foo bäz-Miep'
		'Foo bäz-miep +mööp "Blah Blupp"'
	}
}
