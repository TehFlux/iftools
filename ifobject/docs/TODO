================================================================================
Ionflux Object Base System
Copyright Â© 2006-2013 Joern P. Meier
mail@ionflux.org
--------------------------------------------------------------------------------
TODO
================================================================================

Up next
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
New
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
Critical stuff
--------------------------------------------------------------------------------

+ Use exceptions for critical errors instead of the logging system.
  > memory management functions

+ Install templates

--------------------------------------------------------------------------------
Important stuff
--------------------------------------------------------------------------------

+ Create memory management event handler for debugging
  > object lifetime statistics
    . total number of allocations
    . average lifetime
  > memory management debugging
    . each object that has been created should be deleted
    . objects should not be deleted more than once

+ Class templates
  > vector style properties: add support for set<Element>(index, value)

+ Serialization functions for vectors and maps (with string key)
  (see [iftools]xmlutils.cpp:getXML0(), [fmbase]/xmlutils.cpp:getColorMap())

+ Merge features from FMBase
  > property system
    . support storing object values as an ID (useful for serialization)
    . support vectors and dictionaries of values as a value type
  > memory management events

+ Merge automatic database binding generation (from XTW)
  > generate accessor functions for relationships automatically
    (see Object/Property in XTW)

+ Class templates
  > document features
  > generate XML serialization code automatically for properties
  > generate serialization code for vector/map style properties
  > generate JavaScript proxy classes automatically

+ Build scripts
  > auto-detect Python

--------------------------------------------------------------------------------
Nice to have
--------------------------------------------------------------------------------

+ Build on windows
  > check dependencies (maybe boost can be used as a replacement?)
    . sigc++
    . pthread

--------------------------------------------------------------------------------
Side-tracks
--------------------------------------------------------------------------------


