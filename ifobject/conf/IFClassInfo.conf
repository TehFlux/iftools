# ==========================================================================
# Ionflux Object Base System
# Copyright Â© 2006 Joern P. Meier
# mail@ionflux.org
# --------------------------------------------------------------------------
# IFClassInfo.conf          Run-time type information.
# ==========================================================================
# 
# This file is part of Ionflux Object Base System.
# 
# Ionflux Object Base System is free software; you can redistribute it 
# and/or modify it under the terms of the GNU General Public License as 
# published by the Free Software Foundation; either version 2 of the 
# License, or (at  your option) any later version.
# 
# Ionflux Object Base System is distributed in the hope that it will be 
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
# General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Ionflux Object Base System; if not, write to the Free 
# Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 
# 02111-1307 USA
# 
# ==========================================================================

# project settings
project = {
	name = Ionflux Object Base System
	author = Joern P. Meier
	mail = mail@ionflux.org
	copyrightYear = 2006
	license = GPL
	includeGuardPrefix = IONFLUX_OBJECT_
}

# enclosing namespaces
namespace[].name = Ionflux
namespace[].name = ObjectBase

# using directives
using = {
	'namespace std'
}

# include files.
include = {
	header = {
		'<string>'
	}
#   impl = {
#   }
}

# undefine macros
# undef = {
# }

# Class definition.
class = {
	name = IFClassInfo
	shortDesc = Class information
	title = Class information
	longDesc = This class provides run-time type information for IFObject based types.
	includeDir = ifobject
	group.name = ifobject
#	base = {
#		# base classes from the IFObject hierarchy
#		ifobject[] = {
#           # class name
#			name = 
#			# include file (optional)
#			include = 
#		}
#		# other base classes
#		other[] = {
#           # class name
#			name = 
#			# include file (optional)
#			include = 
#		}
#	}
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# ---- Everything below here needs to be validated for use with ifobject ----
# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# Public constructors.

# Member variables.
variable.protected[] = {
	name = name
	type = std::string
	desc = Class name
}
variable.protected[] = {
	name = desc
	type = std::string
	desc = Class description
}

# Class properties.

# Public static constants.

# Protected static constants.

# Protected member functions.

# Public member functions.
function.public[] = {
	spec = virtual
	type = std::string
	name = getName
	const = true
	bindings = {
		c.enabled = true
		ruby.enabled = true
	}
	impl = 
	shortDesc = Get class name.
	longDesc = Get the class name.
	return = {
		value = name
		desc = The class name
	}
}
function.public[] = {
	spec = virtual
	type = std::string
	name = getDesc
	const = true
	bindings = {
		c.enabled = true
		ruby.enabled = true
	}
	impl = 
	shortDesc = Get class description.
	longDesc = Get the class description.
	return = {
		value = desc
		desc = The class description
	}
}
