# ==========================================================================
# Ionflux Tools
# Copyright (c) 2004 Joern P. Meier
# mail@ionflux.org
# --------------------------------------------------------------------------
# GtkCairoArea.conf                Class definition file.
# ==========================================================================
# 
# This file is part of Ionflux Tools.
# 
# Ionflux Tools is free software; you can redistribute it and/or modify it 
# under the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at  your option)
# any later version.
# 
# Ionflux Tools is distributed in the hope that it will be useful, but 
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Ionflux Tools; if not, write to the Free Software Foundation, 
# Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
# 
# ==========================================================================

# General options.
project = {
	name = Ionflux Tools
	author = Joern P. Meier
	mail = mail@ionflux.org
}
copyrightYear = 2005
includeGuardPrefix = IONFLUX_TOOLS_

# Enclosing namespaces.
namespace[].name = Ionflux
namespace[].name = Tools

# Using directives
using = {
	'namespace std'
}

# Include files.
include = {
	'"gtkmm/drawingarea.h"'
	'"gdk/gdkx.h"'
	'"ionflux/ObjectPool.hpp"'
	'"ionflux/CairoCanvas.hpp"'
}

# Class definition.
class = {
	name = GtkCairoArea
	shortDesc = GTK+/Cairo drawing area
	title = GTK+/Cairo drawing area
	longDesc =  A drawing area for GTK+ using Cairo.
	base = public Gtk::DrawingArea
	includeDir = ionflux
	group.name = general
}

# Public constructors.
constructor.public[] = {
	param[] = {
		type = CairoCanvas*
		name = initCairoCanvas
		desc = Cairo canvas
	}
}

# Public constants.

# Protected variables.
variable.protected[] = {
	type = ObjectPool
	name = pool
	desc = Object pool
}
variable.protected[] = {
	type = Glib::RefPtr<Gdk::GC>
	name = theGC
	desc = Graphics context
}
variable.protected[] = {
	type = Gdk::Color
	name = black
	desc = Color: black
}

# Class properties.
property.protected[] = {
	type = Ionflux::Tools::CairoCanvas*
	setFromType = Ionflux::Tools::CairoCanvas*
	name = cairoCanvas
	desc = Cairo canvas
}

# Protected member functions.
function.protected[] = {
	spec = virtual
	type = void
	name = on_realize
	shortDesc = Event handler: realize
	longDesc = Handler for the realize event.
}
function.protected[] = {
	spec = virtual
	type = bool
	name = on_expose_event
	shortDesc = Event handler: expose
	longDesc = Handler for the expose event.
	param[] = {
		type = GdkEventExpose*
		name = event
		desc = Event
	}
}
function.protected[] = {
	spec = virtual
	type = bool
	name = paint
	shortDesc = Paint widget
	longDesc = Paint the widget.
}

# Public member functions.

